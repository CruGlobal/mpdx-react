name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  # Use production API for codegen to make sure production is compatible with the code to be merged
  API_URL: 'https://api.mpdx.org/graphql'
  SITE_URL: 'http://next-stage.mpdx.org'

jobs:
  split-tests:
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - id: set-test-chunks
        name: Set Chunks
        run: echo "test-chunks=$(yarn test --silent --listTests --json | jq -cM '[_nwise(length / 4 | ceil)]')" >> $GITHUB_OUTPUT
      - id: set-test-chunk-ids
        name: Set Chunk IDs
        run: echo "test-chunk-ids=$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')" >> $GITHUB_OUTPUT
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}

  test:
    runs-on: ubuntu-latest
    name: test (chunk ${{ matrix.chunk }})
    needs:
      - split-tests
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.split-tests.outputs['test-chunk-ids']) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: ðŸ§ª Test (chunk ${{ matrix.chunk }})
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs yarn test:coverage --ci
        env:
          CHUNKS: ${{ needs.split-tests.outputs['test-chunks'] }}
          ROLLBAR_SERVER_ACCESS_TOKEN: ${{secrets.ROLLBAR_SERVER_ACCESS_TOKEN}}
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: ðŸ’¨ ESLint
        run: yarn lint:ci

  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: âœ… TypeScript lint
        run: yarn lint:ts

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ’… Prettier Check
        run: yarn prettier:check

  yarn-check-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache --check-cache

  onesky-upload:
    runs-on: ubuntu-latest
    needs: [test, eslint, typescript, prettier]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: â›…ðŸ”¼ OneSky Upload
        env:
          ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
          ONESKY_API_SECRET: ${{ secrets.ONESKY_API_SECRET }}
          ONESKY_PROJECT_ID: ${{ secrets.ONESKY_PROJECT_ID }}
        run: yarn onesky:upload
