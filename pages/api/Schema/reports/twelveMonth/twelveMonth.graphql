extend type Query {
  twelveMonthReport(
    accountListId: ID!
    designationAccountId: [ID!]
    currencyType: TwelveMonthReportCurrencyType!
  ): TwelveMonthReport!
}

enum TwelveMonthReportCurrencyType {
  salary
  donor
}

type TwelveMonthReport {
  currencyType: TwelveMonthReportCurrencyType
  currencyGroups: [TwelveMonthReportCurrencyGroup!]!
  salaryCurrency: String!
}

type TwelveMonthReportCurrencyGroup {
  currency: String!
  totals: TwelveMonthReportCurrencyGroupTotals!
  contacts: [TwelveMonthReportContact!]!
}

type TwelveMonthReportCurrencyGroupTotals {
  year: Float!
  months: [TwelveMonthReportCurrencyGroupTotalsMonth!]!
  average: Float!
  minimum: Float!
}

type TwelveMonthReportCurrencyGroupTotalsMonth {
  month: ISO8601Date!
  total: Float!
}

enum StatusEnum {
  APPOINTMENT_SCHEDULED
  ASK_IN_FUTURE
  CALL_FOR_DECISION
  CONTACT_FOR_APPOINTMENT
  CULTIVATE_RELATIONSHIP
  EXPIRED_REFERRAL
  NEVER_ASK
  NEVER_CONTACTED
  NOT_INTERESTED
  PARTNER_FINANCIAL
  PARTNER_PRAY
  PARTNER_SPECIAL
  RESEARCH_ABANDONED
  UNRESPONSIVE
}

type TwelveMonthReportContact {
  id: ID!
  name: String!
  total: Float!
  average: Float!
  minimum: Float!
  months: [TwelveMonthReportContactMonths!]!
  accountNumbers: [String!]!
  lateBy30Days: Boolean!
  lateBy60Days: Boolean!
  pledgeAmount: Float
  pledgeCurrency: String
  pledgeFrequency: String
  status: StatusEnum
}

type TwelveMonthReportContactMonths {
  month: ISO8601Date!
  total: Float!
  salaryCurrencyTotal: Float!
  donations: [TwelveMonthReportContactDonation!]!
}

type TwelveMonthReportContactDonation {
  amount: Float!
  date: ISO8601Date!
  currency: String!
  paymentMethod: String
}
