extend type Query {
  coachingAnswerSets(
    accountListId: ID!
    organizationId: ID
    completed: Boolean
  ): [CoachingAnswerSet!]!

  """
  Return the most recent incomplete coaching answer set, creating a new one if necessary
  """
  currentCoachingAnswerSet(
    accountListId: ID!
    organizationId: ID!
  ): CoachingAnswerSet!
}

type CoachingAnswerSet {
  id: ID!
  answers: [CoachingAnswer!]!
  completedAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  questions: [CoachingQuestion!]!
  updatedAt: ISO8601DateTime!
}

type CoachingAnswer {
  id: ID!
  createdAt: ISO8601DateTime!
  response: String
  question: CoachingQuestion!
  updatedAt: ISO8601DateTime!
}

type CoachingQuestion {
  id: ID!
  createdAt: ISO8601DateTime!
  position: Int!
  prompt: String!
  required: Boolean!
  responseOptions: [String!]
  updatedAt: ISO8601DateTime!
}

extend type Mutation {
  saveCoachingAnswer(input: SaveCoachingAnswerInput!): CoachingAnswer!
}

input SaveCoachingAnswerInput {
  answerSetId: String!
  # May be null to create a new answer instead of updating an existing answer
  answerId: String
  response: String!
  questionId: String!
}
