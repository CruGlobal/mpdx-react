name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  # Use production API for codegen to make sure production is compatible with the code to be merged
  API_URL: 'https://next.mpdx.org/api/graphql'

jobs:
  split-tests:
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - id: set-test-chunks
        name: Set Chunks
        run: echo "::set-output name=test-chunks::$(yarn test --silent --listTests --json | jq -cM '[_nwise(length / 4 | ceil)]')"
      - id: set-test-chunk-ids
        name: Set Chunk IDs
        run: echo "::set-output name=test-chunk-ids::$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')"
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}

  test:
    runs-on: ubuntu-latest
    name: test (chunk ${{ matrix.chunk }})
    needs:
      - split-tests
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.split-tests.outputs['test-chunk-ids']) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: ðŸ§ª Test (chunk ${{ matrix.chunk }})
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs yarn test:coverage --ci
        env:
          CHUNKS: ${{ needs.split-tests.outputs['test-chunks'] }}
      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: ðŸ’¨ ESLint
        run: yarn lint:ci

  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: âœ… TypeScript lint
        run: yarn lint:ts

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ’… Prettier Check
        run: yarn prettier:check

  chromatic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Chromatic needs access to the full Git history graph
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ’¥ Force older version of yarn
        # 3.2.0-rc.6 currently used to fix Next.js imports breaks `yarn build-storybook`
        # Without this, it throws `TypeError [ERR_INVALID_ARG_TYPE]: The "id" argument must be of type string. Received null` at /workspaces/mpdx-react/.yarn/cache/jest-worker-npm-26.6.2-46cbcd449f-f9afa3b88e.zip/node_modules/jest-worker/build/workers/processChild.js:97:16
        run: yarn set version 3.1.1
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: ðŸ“ˆ Run GraphQL Codegen
        run: |
          yarn gql
          yarn gql:server
      - name: ðŸ“™ Upload to Chromatic
        if: ${{ github.event_name == 'pull_request' }}
        run: yarn chromatic --exit-zero-on-changes --skip 'dependabot/**' --exit-once-uploaded
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      - name: ðŸ“— Upload to Chromatic accepting changes
        if: ${{ github.event_name != 'pull_request' }}
        run: yarn chromatic --auto-accept-changes --skip 'dependabot/**' --exit-once-uploaded
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  yarn-check-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ðŸ“¦ Install Dependencies
        run: yarn install --immutable --immutable-cache --check-cache

  # onesky-upload:
  #   runs-on: ubuntu-latest
  #   needs: [test, eslint, typescript, prettier]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16
  #     - name: ðŸ“¦ Install Dependencies
  #       run: yarn install --immutable --immutable-cache
  #     - name: â›…ðŸ”¼ OneSky Upload
  #       env:
  #         ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
  #         ONESKY_SECRET_KEY: ${{ secrets.ONESKY_SECRET_KEY }}
  #       run: yarn onesky:upload
